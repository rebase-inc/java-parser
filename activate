#!/bin/bash

ls-grammar () {
    docker run --rm -t rebase/antlr4 sh -c "cd /grammars-v4; ls -a */*.g4"
}

build-docker () {
    docker build -t rebase/antlr4 docker/antlr4
    docker build -t rebase/gradle docker/gradle
    docker build -t rebase/parser docker/parser
    docker build -t rebase/parser-production -f parser-production-Dockerfile .
}

_sh-antlr4 () {
    docker run --rm -it rebase/antlr4 sh
}


gen-parser () {
    docker run --rm -v "$PWD/src/main/java/lang":/out -t rebase/antlr4 \
        antlr4 \
            -lib /grammars-v4 \
            -o /out \
            -package "lang.$(dirname $1)" \
            -no-listener \
            -no-visitor \
            $1
}

pull () {
    docker pull pottava/gradle:2
}


launch-gradle () {
    docker run -d -v $PWD:/app --name gradle rebase/gradle 
}

_sh-gradle () {
    docker exec -it gradle sh
}


gradle () {
    docker exec -it gradle gradle $*
}

make-jre-image () {
    # requires: https://github.com/mvanholsteijn/strip-docker-image
    # shrinks 311->128MB
    # Investigate https://github.com/docker-slim/docker-slim
    # as it seems to gather momentum.
    # They claim having Java container down to 100MB.

    strip-docker-image -i openjdk:8-jre -t rebase/jre  \
        -p openjdk-8-jre-headless:amd64  \
        -f /etc/passwd \
        -f /usr/lib/jvm/ \
        -f '/lib/*/libnss*' \
        -f /bin/ls \
        -f /bin/cat \
        -f /bin/sh \
        -f /bin/mkdir \
        -f /bin/ps \
        -f /bin/sh \
        -f /var/run \
        -f /run
}

parser () {
    java \
        -Xmn512m \
        -Xms1g \
        -Xmx1g \
        -cp build/libs/parser-1.0-all.jar \
        scan.Main $*
}


